"""
This type stub file was generated by pyright.
"""

"""
/term routes.
"""
bp = ...
@bp.route("/index", defaults={ "search": None }, methods=["GET"])
@bp.route("/index/<search>", methods=["GET"])
def index(search): # -> str:
    "Index page."
    ...

@bp.route("/datatables", methods=["POST"])
def datatables_active_source(): # -> Response:
    "Datatables data for terms."
    ...

@bp.route("/export_terms", methods=["POST"])
def export_terms(): # -> Response:
    "Generate export file of terms."
    ...

def handle_term_form(term, repo, form_template_name, return_on_success, embedded_in_reading_frame=...): # -> str:
    """
    Handle a form post.

    This is used here and in read.routes -- read.routes.term_form
    lives in an iframe in the reading frames and returns a different
    template on success.
    """
    ...

@bp.route("/edit/<int:termid>", methods=["GET", "POST"])
def edit(termid): # -> Response | str:
    """
    Edit a term.
    """
    ...

@bp.route("/editbytext/<int:langid>/<text>", methods=["GET", "POST"])
def edit_by_text(langid, text): # -> Response | str:
    """
    Edit a term.
    """
    ...

@bp.route("/new", methods=["GET", "POST"])
def new(): # -> Response | str:
    """
    Create a term.
    """
    ...

@bp.route("/search/<text>/<int:langid>", methods=["GET"])
def search_by_text_in_language(text, langid): # -> list | Response:
    "JSON data for parent data."
    ...

@bp.route("/sentences/<int:langid>/<text>", methods=["GET"])
def sentences(langid, text): # -> str:
    "Get sentences for terms."
    ...

@bp.route("/bulk_update_status", methods=["POST"])
def bulk_update_status(): # -> Response:
    """
    Update the statuses.

    json:
    {
      updates: [ { new_status: 1, termids: [ 42, ] }, ... }, ]
    }
    """
    ...

@bp.route("/bulk_set_parent", methods=["POST"])
def bulk_set_parent(): # -> Response:
    "Set the parent for terms."
    ...

@bp.route("/bulk_delete", methods=["POST"])
def bulk_delete(): # -> Response:
    "Delete terms."
    ...

@bp.route("/delete/<int:termid>", methods=["POST"])
def delete(termid): # -> Response:
    """
    Delete a term.
    """
    ...

