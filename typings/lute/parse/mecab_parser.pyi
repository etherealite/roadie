"""
This type stub file was generated by pyright.
"""

from typing import List
from lute.parse.base import AbstractParser, ParsedToken

"""
Parsing using MeCab.

Uses natto-py (https://github.com/buruzaemon/natto-py) package and
MeCab to do parsing.

Includes classes:

- JapaneseParser

"""
class JapaneseParser(AbstractParser):
    """
    Japanese parser.

    This is only supported if mecab is installed.

    The parser uses natto-py library, and so should
    be able to find mecab automatically; if it can't,
    you may need to set the MECAB_PATH env variable,
    managed by UserSetting.set_value("mecab_path", p)
    """
    _is_supported = ...
    _old_mecab_path = ...
    @classmethod
    def is_supported(cls): # -> bool:
        """
        True if a natto MeCab can be instantiated,
        otherwise false.
        """
        ...
    
    @classmethod
    def name(cls): # -> Literal['Japanese']:
        ...
    
    def get_parsed_tokens(self, text: str, language) -> List[ParsedToken]:
        "Parse the string using MeCab."
        ...
    
    def get_reading(self, text: str): # -> LiteralString | str | Incomplete | None:
        """
        Get the pronunciation for the given text.

        Returns None if the text is all hiragana, or the pronunciation
        doesn't add value (same as text).
        """
        ...
    


